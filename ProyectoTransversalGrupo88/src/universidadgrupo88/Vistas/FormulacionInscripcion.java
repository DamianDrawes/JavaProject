/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidadgrupo88.Vistas;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import universidad.AccesoAdatos.AlumnoData;
import universidad.AccesoAdatos.InscripcionData;
import universidad.AccesoAdatos.MateriaData;
import universidad.Entidades.Alumnos;
import universidad.Entidades.Inscripcion;
import universidad.Entidades.Materia;

/**
 *
 * @author Lourdes
 */
public class FormulacionInscripcion extends javax.swing.JInternalFrame {
private DefaultTableModel modelo = new DefaultTableModel(){
    public boolean isCellEditable (int fila, int columna){
        return false;
    }
};
private ArrayList<Inscripcion> listaInscripcion;
private ArrayList<Materia> listaMateria;
private ArrayList<Alumnos> listaAlumnos;
private AlumnoData aluData= new AlumnoData();
private InscripcionData inscripcionData = new InscripcionData();
private MateriaData materiaData= new MateriaData();


    /**
     * Creates new form FormulacionInscripcion
     */
    public FormulacionInscripcion() {
        initComponents();
        cargarAlumnos();
        /*listaInscripcion = (ArrayList<Inscripcion>) inscripcionData.obtenerInscripciones();*/
        listaMateria = (ArrayList<Materia>) materiaData.listarMaterias();
        listaAlumnos = (ArrayList<Alumnos>) aluData.listarAlumnos();
        armarCabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcAlumno = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jrMateriasInscriptas = new javax.swing.JRadioButton();
        jrMateriasNoinscriptas = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTabla = new javax.swing.JTable();
        jbInscribir = new javax.swing.JButton();
        jbAnular = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        jLabel1.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Formulario de Inscripcion");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Seleccione un alumno");

        jcAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcAlumnoActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Listado de Materias");

        grupo.add(jrMateriasInscriptas);
        jrMateriasInscriptas.setForeground(new java.awt.Color(255, 255, 255));
        jrMateriasInscriptas.setText("Materias Inscriptas");
        jrMateriasInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrMateriasInscriptasActionPerformed(evt);
            }
        });

        grupo.add(jrMateriasNoinscriptas);
        jrMateriasNoinscriptas.setForeground(new java.awt.Color(255, 255, 255));
        jrMateriasNoinscriptas.setText("Materias no Inscriptas");
        jrMateriasNoinscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrMateriasNoinscriptasActionPerformed(evt);
            }
        });

        jtTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtTabla);

        jbInscribir.setText("Inscribir");
        jbInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInscribirActionPerformed(evt);
            }
        });

        jbAnular.setText("Anular Inscripcion");
        jbAnular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnularActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jrMateriasInscriptas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jrMateriasNoinscriptas)
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jbInscribir)
                        .addGap(18, 18, 18)
                        .addComponent(jbAnular)
                        .addGap(25, 25, 25)
                        .addComponent(jbSalir))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrMateriasInscriptas)
                    .addComponent(jrMateriasNoinscriptas))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbInscribir)
                    .addComponent(jbAnular)
                    .addComponent(jbSalir))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcAlumnoActionPerformed
        // TODO add your handling code here:
     
    }//GEN-LAST:event_jcAlumnoActionPerformed

    private void jrMateriasInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrMateriasInscriptasActionPerformed
        // TODO add your handling code here:
        borrarFilas();
        Alumnos alubox = (Alumnos)jcAlumno.getSelectedItem();
        listaMateria = (ArrayList)inscripcionData.obtenerMateriasCursadas(alubox.getIdAlumno());
        for(Materia mat:listaMateria){
            modelo.addRow(new Object[]{mat.getIdMateria(),mat.getNombre(),mat.getAnioMateria()});
            jbInscribir.setEnabled(false);
            jbAnular.setEnabled(true);
        }
        

        
    }//GEN-LAST:event_jrMateriasInscriptasActionPerformed

    private void jrMateriasNoinscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrMateriasNoinscriptasActionPerformed
        // TODO add your handling code here:
         borrarFilas();
        Alumnos alubox = (Alumnos)jcAlumno.getSelectedItem();
        listaMateria = (ArrayList)inscripcionData.obtenerMateriaNOCursadas(alubox.getIdAlumno());
        for(Materia mat:listaMateria){
            modelo.addRow(new Object[]{mat.getIdMateria(),mat.getNombre(),mat.getAnioMateria()});
            jbInscribir.setEnabled(true);
            jbAnular.setEnabled(false);
        }
    
        
    }//GEN-LAST:event_jrMateriasNoinscriptasActionPerformed

    private void jbInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInscribirActionPerformed
        // TODO add your handling code here:
        int idMateria, año;
        String nombre;
        
        Alumnos alumbox = (Alumnos) jcAlumno.getSelectedItem();
        int fila = jtTabla.getSelectedRow();
        System.out.println(fila);
        if(fila >=0){
            idMateria=(Integer)modelo.getValueAt(fila, 0);
            nombre=(String)modelo.getValueAt(fila, 1);
            año=(Integer)modelo.getValueAt(fila, 2);
            Materia mat= new Materia(idMateria,nombre, año, true);
            Inscripcion insc = new Inscripcion(alumbox,mat,0);
            inscripcionData.guardarInscripcion(insc);
            
            JOptionPane.showMessageDialog(this, "Alumno inscripto");
        }else{
            JOptionPane.showMessageDialog(this, "Seleccione una materia");
        }
        
        
    }//GEN-LAST:event_jbInscribirActionPerformed

    private void jbAnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnularActionPerformed
        // TODO add your handling code here:
        int idMateria;
        
        Alumnos alumbox = (Alumnos) jcAlumno.getSelectedItem();
        int fila = jtTabla.getSelectedRow();
        System.out.println(fila);
        if(fila >=0){
            idMateria=(Integer)modelo.getValueAt(fila, 0);
        inscripcionData.borrarInscripcionMateriaAlummno(alumbox.getIdAlumno(), idMateria);
        
        }
       
    }//GEN-LAST:event_jbAnularActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup grupo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAnular;
    private javax.swing.JButton jbInscribir;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<Alumnos> jcAlumno;
    private javax.swing.JRadioButton jrMateriasInscriptas;
    private javax.swing.JRadioButton jrMateriasNoinscriptas;
    private javax.swing.JTable jtTabla;
    // End of variables declaration//GEN-END:variables
  public void cargarAlumnos(){
           for(Alumnos alu : aluData.listarAlumnos())
               jcAlumno.addItem(alu);
           
       }
           
    
    private void armarCabecera(){
        ArrayList<Object> columnas= new ArrayList<>();
        modelo.addColumn("ID");
        modelo.addColumn("Nombre");
        modelo.addColumn("Año");
         jtTabla.setModel(modelo);
         
         for(Object it: columnas){
             modelo.addColumn(it);
         }
         jtTabla.setModel(modelo);
     
       
    }

private void borrarFilas(){
    int filas= jtTabla.getRowCount()-1;
    
    for(int f=filas;f>=0; f--){
        modelo.removeRow(f);
    }
        
    }
}





